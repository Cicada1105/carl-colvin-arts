"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.createMediaElement=exports.createCustomControls=void 0;var _methods=require("../../../../global/methods");var _event_listeners=require("./event_listeners");var __awaiter=void 0&&(void 0).__awaiter||function(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P(function(resolve){resolve(value);});}return new(P||(P=Promise))(function(resolve,reject){function fulfilled(value){try{step(generator.next(value));}catch(e){reject(e);}}function rejected(value){try{step(generator["throw"](value));}catch(e){reject(e);}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected);}step((generator=generator.apply(thisArg,_arguments||[])).next());});};const createMediaElement=mediaEl=>__awaiter(void 0,void 0,void 0,function*(){let tag=mediaEl.image?"audio":"video";let el=(0,_methods.createElement)({element:"".concat(tag),className:"mediaTag",idName:"".concat(tag,"Tag")});let source=document.createElement('source');source.setAttribute("src",mediaEl.source.src);source.setAttribute("type",mediaEl.source.type);el.appendChild(source);if(mediaEl.controls){el.setAttribute('controls','');return el;}else{let tempCtrls=yield asyncFunction(el);return tempCtrls;}});exports.createMediaElement=createMediaElement;function asyncFunction(el){return __awaiter(this,void 0,void 0,function*(){let temp=yield waitForCompleteLoad(el);return temp;});}function waitForCompleteLoad(el){let promise=new Promise(resolve=>__awaiter(this,void 0,void 0,function*(){yield el.addEventListener("durationchange",e=>{e.preventDefault();resolve(createCustomControls(el));});}));return promise;}const createCustomControls=mediaEl=>{let ctrlCont=(0,_methods.createElement)({className:"mediaControls"});let playBtn=(0,_methods.createElement)({element:'i',className:'fas fa-play'});playBtn.addEventListener("click",_event_listeners.playButtonListener.bind(mediaEl));let timeStamp=createTimeStamp(mediaEl.duration);mediaEl.addEventListener("timeupdate",()=>{if(mediaEl.currentTime==mediaEl.duration){mediaEl.currentTime=0;mediaEl.pause();playBtn.className="fas fa-play";}let min=Math.floor(mediaEl.currentTime/60);let seconds=Math.floor(mediaEl.currentTime-min*60);let secondsStr=seconds<10?"0".concat(seconds):"".concat(seconds);timeStamp.innerHTML="".concat(min,":").concat(secondsStr,"/").concat(timeStamp.innerHTML.slice(5));progressBar.value=Math.floor(mediaEl.currentTime);});let progressBar=createProgressBar(mediaEl.duration);let muteBtn=(0,_methods.createElement)({element:'i',className:'fas fa-volume-up'});muteBtn.addEventListener("click",_event_listeners.muteButtonListener.bind(mediaEl));ctrlCont.appendChild(mediaEl);ctrlCont.appendChild(progressBar);ctrlCont.appendChild(playBtn);ctrlCont.appendChild(timeStamp);ctrlCont.appendChild(muteBtn);return ctrlCont;};exports.createCustomControls=createCustomControls;const createTimeStamp=length=>{let durationMin=Math.floor(length/60);let durationSec=Math.floor(length-durationMin*60);let durationSecStr=durationSec<10?"0".concat(durationSec):"".concat(durationSec);let timeEl=(0,_methods.createTextElement)({element:"span",text:"0:00/".concat(durationMin,":").concat(durationSecStr)});return timeEl;};const createProgressBar=val=>{let bar=(0,_methods.createElement)({element:"progress",className:"progressBar"});bar.value=0;bar.max=Math.ceil(val);return bar;};