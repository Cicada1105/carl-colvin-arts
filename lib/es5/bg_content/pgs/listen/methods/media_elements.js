"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.createMediaElement=exports.createCustomControls=void 0;var _elements=require("../../../../global/methods/elements");var _event_listeners=require("./event_listeners");const createMediaElement=mediaEl=>{return new Promise(resolve=>{let tag=mediaEl.image?"audio":"video";let el=(0,_elements.createElement)({element:"".concat(tag),className:"mediaTag",idName:"".concat(tag,"Tag")});let source=document.createElement('source');source.setAttribute("src",mediaEl.source.src);source.setAttribute("type",mediaEl.source.type);el.appendChild(source);if(mediaEl.controls)el.setAttribute('controls','');el.addEventListener("durationchange",e=>resolve(el));});};exports.createMediaElement=createMediaElement;const createCustomControls=mediaEl=>{let ctrlCont=(0,_elements.createElement)({className:"mediaControls"});let playBtn=(0,_elements.createElement)({element:'i',className:'fas fa-play'});playBtn.addEventListener("click",_event_listeners.playButtonListener.bind(mediaEl));let timeStamp=createTimeStamp(mediaEl.duration);mediaEl.addEventListener("timeupdate",()=>{if(mediaEl.currentTime==mediaEl.duration){mediaEl.currentTime=0;mediaEl.pause();playBtn.className="fas fa-play";}let min=Math.floor(mediaEl.currentTime/60);let seconds=Math.floor(mediaEl.currentTime-min*60);let secondsStr=seconds<10?"0".concat(seconds):"".concat(seconds);timeStamp.innerHTML="".concat(min,":").concat(secondsStr,"/").concat(timeStamp.innerHTML.slice(5));progressBar.value=Math.floor(mediaEl.currentTime);});let progressBar=createProgressBar(mediaEl.duration);(function(){let mediaLength=mediaEl.duration;let xClickedPos=0;let barWidth=0;let segmentLength=0;let nearestBtmSegment=0;let timeUpdateEvent=new Event("timeupdate");progressBar.addEventListener("click",event=>{xClickedPos=event.offsetX;console.log("User clicked pos: ".concat(xClickedPos));barWidth=parseFloat(event.path[0].clientWidth);console.log("Progress bar width: ".concat(barWidth));segmentLength=barWidth/mediaLength;console.log("Each even segment is ".concat(segmentLength," units long"));nearestBtmSegment=Math.floor(xClickedPos/segmentLength);console.log("User is closest to the ".concat(nearestBtmSegment," segment"));mediaEl.currentTime=nearestBtmSegment;mediaEl.dispatchEvent(timeUpdateEvent);});})();let muteBtn=(0,_elements.createElement)({element:'i',className:'fas fa-volume-up'});muteBtn.addEventListener("click",_event_listeners.muteButtonListener.bind(mediaEl));ctrlCont.appendChild(mediaEl);ctrlCont.appendChild(progressBar);ctrlCont.appendChild(playBtn);ctrlCont.appendChild(timeStamp);ctrlCont.appendChild(muteBtn);return ctrlCont;};exports.createCustomControls=createCustomControls;const createTimeStamp=length=>{let durationMin=Math.floor(length/60);let durationSec=Math.floor(length-durationMin*60);let durationSecStr=durationSec<10?"0".concat(durationSec):"".concat(durationSec);let timeEl=(0,_elements.createTextElement)({element:"span",text:"0:00/".concat(durationMin,":").concat(durationSecStr)});return timeEl;};const createProgressBar=val=>{let bar=(0,_elements.createElement)({element:"progress",className:"progressBar"});bar.value=0;bar.max=Math.ceil(val);return bar;};