"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.createLiteratureRow=void 0;var _static=require("../data/static");var _static2=require("../../shared/data/static");var _create=require("./create");var _event_handlers=require("./event_handlers");const createLiteratureRow=()=>{let rowData={header:_static2.HEADERS[0],content:null};let options=[{"display":"-Select","value":"select"}];_static.literatureRatesSelections.forEach(litSelection=>{options.push(litSelection.literatureType);});const childRowCallback=childPos=>{let childElement=createGenreRow(_static.literatureRatesSelections[childPos].child);literatureRow.appendChild(childElement);};rowData.content=(0,_create.createSelectCont)(options,_event_handlers.LiteratureTypeHandler.bind(childRowCallback));let literatureRow=(0,_create.createInputRow)(rowData);return literatureRow;};exports.createLiteratureRow=createLiteratureRow;const createGenreRow=genreData=>{let rowData={header:_static2.HEADERS[1],content:null};let options=[{"display":"-Select-","value":"select"}];genreData.genres.forEach(genre=>{options.push(genre);});const childRowCallback=()=>{let childElement=createEditingRow(genreData.child);genreRow.appendChild(childElement);};rowData.content=(0,_create.createSelectCont)(options,_event_handlers.GenreHandler.bind(childRowCallback));let genreRow=(0,_create.createInputRow)(rowData);return genreRow;};const createEditingRow=editingData=>{let rowData={header:_static2.HEADERS[2],content:null};let options=[{"display":"-Select-","value":"select"}];editingData.forEach(type=>{options.push(type.editingType);});const childRowCallback=childPos=>{let childElement=createWordCountRow(editingData[childPos].child.rates);editingTypeRow.appendChild(childElement);};rowData.content=(0,_create.createSelectCont)(options,_event_handlers.EditingHandler.bind(childRowCallback));let editingTypeRow=(0,_create.createInputRow)(rowData);return editingTypeRow;};const createWordCountRow=rates=>{let rowData={header:_static2.HEADERS[3],content:null};let ranges={min:0,max:0};rates.forEach(rate=>{rate.min<ranges.min&&(ranges.min=rate.min);rate.max>ranges.max&&(ranges.max=rate.max);});const childRowCallback=()=>{let childElement=createDeadlineRow();wordCountRow.appendChild(childElement);};rowData.content=(0,_create.createNumberCont)(ranges,_event_handlers.WordCountHandler.bind({callBack:childRowCallback,data:rates}));let wordCountRow=(0,_create.createInputRow)(rowData);return wordCountRow;};const createDeadlineRow=()=>{let rowData={header:_static2.HEADERS[4],content:null};const childRowCallback=()=>{let childElement=createContactEmailRow();deadlineRow.appendChild(childElement);};rowData.content=(0,_create.createDeadlineCont)(_event_handlers.DeadlineHandler.bind(childRowCallback));let deadlineRow=(0,_create.createInputRow)(rowData);return deadlineRow;};const createContactEmailRow=()=>{let rowData={header:_static2.HEADERS[5],content:null};rowData.content=(0,_create.createEmailCont)(_event_handlers.EmailHandler);let emailRow=(0,_create.createInputRow)(rowData);return emailRow;};