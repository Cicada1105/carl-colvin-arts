"use strict";Object.defineProperty(exports,"__esModule",{value:true});exports.formatDate=formatDate;exports.createLiteratureRow=void 0;var _static=require("../data/static");var _dynamic=require("../data/dynamic");var _static2=require("../../shared/data/static");var _create=require("./create");const createLiteratureRow=()=>{let rowData={header:_static2.HEADERS[0],content:null};let options=[{"display":"-Select","value":"select"}];_static.literatureRatesSelections.forEach(litSelection=>{options.push(litSelection.literatureType);});let childElement;rowData.content=(0,_create.createSelectCont)(options,event=>{typeof childElement!=="undefined"&&childElement.remove();if(event.target.value!=="select"){let selectedLitPos=_static.literatureRatesSelections.findIndex(litSelection=>{return litSelection.literatureType.value===event.target.value;});_dynamic.userSelectedData.literatureType=_static.literatureRatesSelections[selectedLitPos].literatureType.display;childElement=createGenreRow(_static.literatureRatesSelections[selectedLitPos].child);literatureRow.appendChild(childElement);}});let literatureRow=(0,_create.createInputRow)(rowData);return literatureRow;};exports.createLiteratureRow=createLiteratureRow;const createGenreRow=genreData=>{let rowData={header:_static2.HEADERS[1],content:null};let options=[{"display":"-Select-","value":"select"}];genreData.genres.forEach(genre=>{options.push(genre);});let childElement;rowData.content=(0,_create.createSelectCont)(options,event=>{typeof childElement!=="undefined"&&childElement.remove();if(event.target.value!=="select"){_dynamic.userSelectedData.genre=event.target.selectedOptions[0].text;childElement=createEditingRow(genreData.child);genreRow.appendChild(childElement);}});let genreRow=(0,_create.createInputRow)(rowData);return genreRow;};const createEditingRow=editingData=>{let rowData={header:_static2.HEADERS[2],content:null};let options=[{"display":"-Select-","value":"select"}];editingData.forEach(type=>{options.push(type.editingType);});let childElement;rowData.content=(0,_create.createSelectCont)(options,event=>{typeof childElement!=="undefined"&&childElement.remove();if(event.target.value!=="select"){let selectedEditingTypePos=editingData.findIndex(type=>{return type.editingType.value===event.target.value;});_dynamic.userSelectedData.editingType=editingData[selectedEditingTypePos].editingType.display;childElement=createWordCountRow(editingData[selectedEditingTypePos].child.rates);editingTypeRow.appendChild(childElement);}});let editingTypeRow=(0,_create.createInputRow)(rowData);return editingTypeRow;};const createWordCountRow=rates=>{let rowData={header:_static2.HEADERS[3],content:null};let ranges={min:0,max:0};rates.forEach(rate=>{rate.min<ranges.min&&(ranges.min=rate.min);rate.max>ranges.max&&(ranges.max=rate.max);});let childElement;rowData.content=(0,_create.createNumberCont)(ranges,event=>{var _a;typeof childElement!=="undefined"&&childElement.remove();let enteredValueStr=event.target.value;let enteredValueNum=parseInt(enteredValueStr);if(enteredValueNum>=ranges.min&&enteredValueNum<=ranges.max&&!(enteredValueStr==="")){_dynamic.userSelectedData.wordCount=enteredValueNum;let wordCountPos=rates.findIndex(rate=>{return enteredValueNum>=rate.min&&enteredValueNum<=rate.max;});let currentRate=rates[wordCountPos];let currentPricing;currentPricing=(_a=currentRate.flatRate)!==null&&_a!==void 0?_a:currentRate.perWord*enteredValueNum+currentRate.perHour*24;childElement=createDeadlineRow();wordCountRow.appendChild(childElement);}});let wordCountRow=(0,_create.createInputRow)(rowData);return wordCountRow;};function getMinMaxDates(date){let min=new Date();let max=new Date();let futureMinDateInMs=date.getTime()+1*24*60*60*1000;let futureMaxDateInMs=date.getTime()+1.5*365*24*60*60*1000;min.setTime(futureMinDateInMs);max.setTime(futureMaxDateInMs);return[min,max];}function formatDate(currDate){let month=currDate.getMonth()+1;let monthStr=month<10?"0"+month:month.toString();let date=currDate.getDate();let dateStr=date<10?"0"+date:date.toString();return"".concat(currDate.getFullYear(),"-").concat(monthStr,"-").concat(dateStr,"T").concat(currDate.getHours(),":").concat(currDate.getMinutes(),":").concat(currDate.getSeconds());}const createDeadlineRow=()=>{let rowData={header:_static2.HEADERS[4],content:null};let currDate=new Date();let[minDate,maxDate]=getMinMaxDates(currDate);let ranges={min:formatDate(minDate),max:formatDate(maxDate)};let childElement;rowData.content=(0,_create.createDeadlineCont)(ranges,event=>{typeof childElement!=="undefined"&&childElement.remove();let enteredDateStr=event.target.value;let enteredDateMs=Date.parse(enteredDateStr);if(enteredDateMs>=minDate.getTime()&&enteredDateMs<=maxDate.getTime()){_dynamic.userSelectedData.deadline=enteredDateStr;childElement=createContactEmailRow();deadlineRow.appendChild(childElement);}_dynamic.userSelectedData.deadline=event.target.value;});let deadlineRow=(0,_create.createInputRow)(rowData);return deadlineRow;};const createContactEmailRow=()=>{let rowData={header:_static2.HEADERS[5],content:null};rowData.content=(0,_create.createEmailCont)();let emailRow=(0,_create.createInputRow)(rowData);return emailRow;};