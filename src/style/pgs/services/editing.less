// Import fixed colors to used throughout the pages
@import "../../global/colors.less";
@import (reference) "../../global/keyframes.less";
@import (reference) "../../global/methods.less";
@import (reference) '../../global/namespace.less';

#globalNS > .html();
#globalNS > .navigation();
#globalNS > .bg_canvas();
#globalNS > .bg_img();

// Load keyframes specific to editing page
.rotateCircleKeyFrames();

.header() {
	.format(relative,10rem);
	text-align: center;
	color: @textColor;
	margin:auto;
}
/*  Rest of the styling goes here */
h1#pageHeader {
	.header();
	margin-top:5rem;
	font-size:2rem;
}
h2 {
	.header();

	&#pricingChartHeader {
		margin-top:3.5rem;
		font-size: 1.65rem;
	}
	&#pricingHeader {
		font-size: 1.65rem;
		margin-bottom:2.5rem;
	}
}
p#intro {
	.format(relative, 80%);
	max-width:50rem;
	text-align:center;
	color: @textColor;
	margin:3.5rem auto;
	padding:0px 2rem;

	&::first-line {
		text-indent:3rem;
	}
}
hr {
	.format(relative, 75%);
	margin-top: 2.5rem;
	border: 1px solid @accentColor;
}
.labelFormatting() {
	.formatting {
		position:relative;
		display: inline-block;
		font-size:1.25rem;
		text-align: center;
		color: @textColor;
		font-weight:bold;
	}
}
/*.textFormatting(@color: @textColor; @align; @decoration; @indent; @weight; @size; @family) {
	color:@color;
	text-align:@align;
	text-indent:@indent;
	font:@weight @size @family;
}*/
.customRadioStyle {
	display:inline-block;
	border-radius:50%;
	content:"";
	left:-2px;
	top:-2px;
}
/* Mobile first design */
div#pricingChartCont {
	.format(relative,90%);
	margin:2.5rem auto 5rem auto;
	z-index: 1;

	& > div#selectionsCont {
		.format(relative,100%);
		display:flex;
		flex-flow:row wrap;
		justify-content: space-around;
		row-gap:2.5rem;

		& > div.selectionCont {

			& > .selectionHeader {
				.format(relative,100%);
				text-align:center;
				text-decoration:underline;
				text-indent:unset;
				padding-bottom:1rem;
				margin-bottom:2rem;
			}
			& > div[class $= "Row"] {
				.format(relative,55%);
				text-align: center;
				min-width:25rem;
				margin:auto;
				margin-bottom:2.5rem;

				&:hover {
					cursor: pointer;
				}
				& > input[type="radio"] {
				  visibility:hidden;

				  	&:checked + label + div.customRadioBtnCont {

				  		& > span.innerCircle {
					  		background-color:white;	
				  		}
				  		& > span.rotatingWhitePiece {
							animation-name: circle;
				  		}
				  		& > span.whitePieceMask {
							transform:rotateZ(45deg);	
				  		}
				  		& > span.whiteFiller {
							border: 2px solid white;
				  		}
				  	}
				}
				& > label {
					.labelFormatting > .formatting;
					width:calc(100% - 29px);
					margin-left:-2rem;
					z-index:1;
				
					&:hover {
						cursor:pointer;
					}

					/*	White inner small circle	*/
					& + div.customRadioBtnCont {
						.format(absolute,18px,18px);
						display:inline-block;
						border: 2px solid rgba(222, 87, 87, 1);
						border-radius: 50%;
					    left:0.75rem;

						& > span.innerCircle {
							.format(absolute,10px,10px);
						    left:4px;
						    top:4px;
							display:inline-block;
						    margin-right:20px;
						    content:"";
	    					border-radius: 50%;
						}
						& > span.rotatingWhitePiece {
							&:extend(.customRadioStyle);
							.format(absolute,18px,18px);

						    visibility:visible;
						    margin-right:20px;
						    animation-duration: 1s;
						    animation-iteration-count:1;
						    animation-timing-function:linear;
						    border: 2px solid rgba(222,87,87,0);
						}
				    	/*	Red slice acting as initial mask for white slice 	*/
						& > span.whitePieceMask {
							&:extend(.customRadioStyle);
							.format(absolute,inherit,inherit);

						    transform:rotateZ(-45deg);
						    border: 2px solid rgba(255,255,255,0);
						    border-top: 2px solid #de5757;
						    transition:transform 0.25s linear 0.75s;
						}
				    	/*	White solid border that displays after white single border has rotated passed position: */
				    	// Possibly changed whiteFiller from transition to animation to change fill mode
						& > span.whiteFiller {	
							&:extend(.customRadioStyle);
							.format(absolute,inherit,inherit);

						    margin-right:20px;
						    transform: rotateZ(45deg);
						    border: 2px solid rgba(222,87,87,0);
						    transition:border-top 0s linear 0.25s, border-right 0s linear 0.5s, border-bottom 0s linear 0.75s, border-left 0s linear 1s;
						}
					}
				}
			}
		}
	}
	& > div#chartCont {
		.format(relative,100%,inherit);
		display:block;
		float:unset;

		/*  Chart table   */
		& > table {
			.format(relative,100%);
			max-width:35rem;
			margin:auto;
			margin-top:1rem;
			color:white;
			border-collapse:collapse;

			thead, tbody {
				width: inherit;
			}
			& th {
				.format(relative,33.33%);
				border-bottom:3px solid @accentColor;
				font-size:1.45rem;
				text-align:center;
				padding-top:1rem;
				padding-bottom:0.75rem;
			}
			& td {
				text-align:center;
				font-size:1.2rem;
				padding-top:1rem;
				padding-bottom:0.75rem;
			}
		}
	}
}

div#progressCont {
	.format(relative, 30%);
	margin:0;
	float:left;

	& > div.circleCont {
		.format(inherit, 5rem, 2.5rem);
		display: block;
		margin:auto;
		margin-bottom:7.75rem;

		// Last container, remove margin for proper spacing between submit row
		&:last-of-type {
			margin-bottom:0rem;
		}
		& > p {
			.format(absolute,max-content);
			color: @textColor;
			text-align: center;
			font-size:1.25rem;
			font-weight:bold;
			padding-top:0.53125rem;
			margin:0px;
			margin-left:100%;
		}
		& > canvas.progressCircle {
			.format(absolute, inherit);
			left: 0px;
			bottom: 0px;
			z-index:1;
		}
		& > div.rectCont {
			.format(absolute, 8.1rem, 1.5rem);
			transform-origin:-1rem;
			transform:rotateZ(90deg);
			left: 3.5rem;
			bottom:13%;

			& > canvas {
				.format(absolute, inherit, inherit);
			}
			& > div.whiteProgressRect {
				.format(absolute, inherit, 0.5rem);
				background-color:white;
				margin-top:0.5rem;
			}
		}
	}
}
button {
	position:relative;
	z-index:3;
}

form#inputRowsCont {
	.format(relative, 40%);
	padding-bottom:0px;
	float:right;
	margin:0px;
	z-index:2;
/*
	@NUM_ROWS: 7;
	@SPACE_BETWEEN_ROWS: 10.25rem;
	@top_selector: & > .selectionRow;
	.flexContHeight(@top_selector;1);
	// A loop that creates the height of each flex container
	.flexContHeight (@selector; @rowNum) when (@rowNum <= @NUM_ROWS) {
		@{selector} {
			height:(53.375rem - (@SPACE_BETWEEN_ROWS * (@rowNum - 1)));
		}

		.flexContHeight(@new_selector_@{nextNum}; @nextNum);
	}
*/
	@MAX_SELECTION_ROW_HEIGHT: 53.375rem;
	@SPACE_BETWEEN_ROWS: 10.25rem;
	& > div.selectionRow {
		height:@MAX_SELECTION_ROW_HEIGHT;
		margin-top:0.375rem;

		& > div.selectionRow {
			height:(@MAX_SELECTION_ROW_HEIGHT - (@SPACE_BETWEEN_ROWS));

			& > div.selectionRow {
				height:(@MAX_SELECTION_ROW_HEIGHT - (@SPACE_BETWEEN_ROWS * 2));

				& > div.selectionRow {
					height:(@MAX_SELECTION_ROW_HEIGHT - (@SPACE_BETWEEN_ROWS * 3));

					& > div.selectionRow {
						height:(@MAX_SELECTION_ROW_HEIGHT - (@SPACE_BETWEEN_ROWS * 4));

						& > div.selectionRow {
							height:(@MAX_SELECTION_ROW_HEIGHT - (@SPACE_BETWEEN_ROWS * 5));

							& > div.selectionRow {
								height:(@MAX_SELECTION_ROW_HEIGHT - (@SPACE_BETWEEN_ROWS * 6));
							}
						}
					}
				}
			}
		}
	}
	div[class $= "Row"] {
		display:flex;
		flex-flow:column nowrap;
		justify-content: space-between;

		& > i {
			display:inline;
			font-size:1.7rem;
			color:@accentColor;
		}
		& > label {
			display:none;
		}
		& > div[class $= "Cont"]{
			.format(absolute, 12.5rem, 1.75rem);
			display:inline;
			margin:auto;

			& > [class $= "Element"] {
				.inputMixin(inherit);
			}
			& > input[type="datetime-local"] {
				.inputMixin(initial)
			}
		}
		& > div#emailCont {
			width:min-content;

			& > input#email {
				width:12.5rem;
			}
			& > span#emailErrorMsg {
				position:relative;
				color:@errorMsgColor;
				display:inline;
				top:4px;
				margin-left:5px;
			}
		}
	}
}
.inputMixin(@width) {
	.format(relative, @width, inherit);
	font-family: Arial;
	font-size:1rem;
	border-width:1px;
	padding:0px;
	padding-left: 10px;

	&:focus {
		outline: none;
	}
}
// Submit container needs to be given explicit height
#submitRow {
	.format(relative,100%);
	display:inline-block;
	color:@textColor;
	margin-top:5rem;

	#submitCont {
		width:fit-content;
		margin:auto;

		#sending_img {
			display:block;
			margin-top:-13px;
			width:7rem;
		}
		#formMessage {
			.format(absolute,100%);
			color:@textColor;
			text-align: center;
			bottom:0;
			left:50%;
			transform: translateX(-50%);
		}
		input[type = "button"] {
			background-color:@accentColor;
			font-size:1rem;
			border:none;
			color:@textColor;
			border-radius:5px;
			display:block;
			padding:10px 40px;

			&:focus {
				outline: 0;
				background-color: @buttonHoverColor;
			}
			&:hover {
				background-color:@buttonHoverColor;
				cursor:pointer;	
			}
		}
	}
	div#disclaimerCont {
		width:23rem;
		margin:auto;
		margin-top:2.5rem;
		font-size:0.95rem;

		fieldset {
			border-color:@accentColor;

			legend {
				padding:0px 10px;
			}
			p {
				text-align:justify;
				text-indent: 20px;
			}
		}
	}
}
div#contactLink {
	.format(relative,20rem);
	transform:translate(-50%);
	display:inline-block;
	text-align: center;
	margin:5rem auto;
	left:50%;
	z-index: 1;

	// text "Request Performance"
	& > h2 {
		display:inline;
		color:@textColor;
	}
	& > i {
		position:absolute;
		font-size:1.75rem;
		color:@accentColor;
		right:0;

		&:hover {
			cursor: pointer;
		}
	}
}

/* Beyond mobile sizing */
@media only screen and (min-width:960px) {
	div#progressCont {
		.format(relative, 60rem, 7rem);
		float:unset;
		margin:2.5rem auto 7.75rem auto;

		& > div.circleCont {
			height:100%;
			display: inline-block;
			margin:0 2.5rem;

			& > p {
				font-weight:initial;
				font-size: 1rem;
				margin-left:0px;
				width:100%;
			}
			& > canvas.progressCircle {
				left: 0px;
				bottom: 0px;
				z-index:1;
			}
			& > div.rectCont {
				transform:unset;
				bottom:0.5rem;
				width:8rem;
			}
		}
	}
	form#inputRowsCont {
		padding-bottom:8rem;
		margin:auto;
		margin-top:5rem;
		float:unset;
		width:75%;

		& > div.selectionRow {
			height:initial;

			& > div.selectionRow {
				height:initial;

				& > div.selectionRow {
					height:initial;

					& > div.selectionRow {
						height:initial;

						& > div.selectionRow {
							height:initial;

							& > div.selectionRow {
								height:initial;

								& > div.selectionRow {
									height:initial;
								}
							}
						}
					}
				}
			}
		}
		div[class $= "Row"] {
			display:block;
			margin-top:5rem;

			& > i {
				float:left;
			}
			& > label {
				.labelFormatting > .formatting;
				.format(absolute,15rem);

				float:left;
			}
			& > div[class $= "Cont"] {
				position:relative;
				display:block;
			}
			& > div#emailCont {
				width:fit-content;

				& > input#email {
					margin-left:13px;
				}
				& > span#emailErrorMsg {
					position:absolute;
				}
			}
		}
	}
	#submitRow {
		.dimensions(75%,fit-content);
		display:block;
		margin:auto;

		#submitCont {
		}
		div#disclaimerCont {
			margin-right:0;
		}
	}
	div#contactLink {
		transform:unset;
		display:block;
		padding-bottom:5rem;
		left:unset;
	}
}
.table_cell_format() {
	text-align:center;
	padding-top:1rem;
	padding-bottom:0.75rem;
}
@media only screen and (min-width:1245px) {
	div#pricingChartCont {

		& > div#selectionsCont {
			display:inline-block;
			width:50%;

			& > div.selectionCont {

				& > .selectionHeader {
					text-align:left;
					text-indent:3rem;
					margin:unset;
				}
			}
		}
		& > div#chartCont {
			display:inline-block;
			float:right;
			width:50%;

			/*  Chart table   */
			& > table {
				width:35rem;

				thead, tbody {
					width: inherit;
				}
				& th {
					&:extend(.table_cell_format);
					.format(relative,33.33%);
					border-bottom:3px solid @accentColor;
					font-size:1.45rem;
				}
				& td {
					&:extend(.table_cell_format);
					font-size:1.2rem;
				}
			}
		}
	}
	div#progressCont {
		width:72rem;

		& > div.circleCont {
			width:6rem;
			margin:0 3rem;

			& > p {
				font-size: 1.3rem;
			}
			& > div.rectCont {
				bottom:0.75rem;
				width:9.25rem;
				left:4.4rem;
			}
		}
	}
	form#inputRowsCont {
		div[class $= "Row"] > label {
			padding-left:2.5rem;
		}
	}
}

#globalNS > .social();